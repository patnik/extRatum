% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/point_calc.R
\name{point_calc}
\alias{point_calc}
\title{Point data calculation}
\usage{
point_calc(
  point_data,
  higher_geo_lay,
  unique_id_code,
  class_col,
  crs,
  total_points = TRUE
)
}
\arguments{
\item{point_data}{multipoint object of class \code{sf}, \code{sfc} or \code{sfg}.}

\item{higher_geo_lay}{multipologon object of class \code{sf}, \code{sfc} or \code{sfg}.}

\item{unique_id_code}{a string; indicating the unique ID column of \code{higher_geo_lay}, in which
we want to summarise the data.}

\item{class_col}{a string; indicating the column name of \code{point_data} that contains
information on the classification of points. It is used when \code{total_points = FALSE}.}

\item{crs}{coordinate reference system: integer with the EPSG code, or character with proj4string.}

\item{total_points}{logical; do we want to measure the total number of points? if set to \code{FALSE} it returns the
functio results by each point class; if missing, defaults to \code{TRUE}.}
}
\value{
if \code{total_points = TRUE}:
A \code{tibble} data frame objects containing three columns:
the \code{unique_id_code} of \code{higher_geo_lay}, the total area of each polygon
in \code{higher_geo_lay} (Tot_area_sqkm), the total number of point features \code{point_data} (NoPoints),
and the ratio between the total number of point features \code{point_data} and the the total area of
\code{higher_geo_lay} polygon (Ratio).

if \code{total_points = FALSE}:
A list of three \code{tibble} data frame objects.
\itemize{
\item The object \code{PointsLong} contains three columns:
the \code{unique_id_code} of \code{higher_geo_lay}, the \code{class_col} of \code{point_data},
the number of point features \code{point_data} by class (NoPoints), the total area of each polygon
in \code{higher_geo_lay} (Tot_area_sqkm) and the ratio between the number of point features by class \code{point_data}
and the the total area of \code{higher_geo_lay} polygon (Ratio).
\item The object \code{PointsCountWide}:
Returns the point counts of \code{PointsLong} by \code{unique_id_code} and \code{class_col} in a wide format.
\item The object \code{PointsRatioWide}:
Returns the ratio of \code{PointsLong} by \code{unique_id_code} and \code{class_col} in a wide format.
}
}
\description{
Calculates the number of a multipoint object within a set of polygons, as well as the
the ratio between the number of points and the total area of a higher geography polygon.
If there is a clasification of the points, this function is able to return the same summary
measures for each class.
}
\examples{
# Run the point_calc() function using the toy datasets provided by the package.
# The datasets are georeferenced in wgs84. However, we need a planar system to measure areas.
# In this case, the points and polygons are in the UK so we use the British National Grid.

# This example will return the total points count and ratio
outcome1 <- point_calc(
 point_data = points,
 higher_geo_lay = pol_large,
 unique_id_code = "large_pol_",
 crs = "epsg:27700",
 total_points = TRUE)

 # print the outcome
 outcome1


 #' # This example will return the points count and ratio by class
outcome2 <- point_calc(
 point_data = points,
 higher_geo_lay = pol_large,
 unique_id_code = "large_pol_",
 class_col = "class_name",
 crs = "epsg:27700",
 total_points = FALSE)

 # print the outcome in a long format
 outcome2$PointsLong

 # print the point count by class in a wide format
 outcome2$PointsCountWide

 # print the point ratio by class in a wide format
 outcome2$PointsRatioWide


}
